#include <pthread.h>
#include <stdlib.h>
#include <stdio.h>
#include <fcntl.h>

void* writing(void *arg)
{
	int f;
	int tmp = 0;
	int* ret = &tmp;	
  f = open("/dev/sleepy0",O_RDWR);
	int i = 10;
	int* iptr = &i;
	printf("before\n");
	*ret = write(f, iptr, sizeof(int));
	printf("TIME LEFT: %i \n", *ret);
	pthread_exit((void*)ret);
  return (void*)ret;
}

int main(int argc, char *argv[])
{
  pthread_t writeThreads[10];
  pthread_attr_t attribute;
  pthread_attr_init(&attribute);
  int i;
  for(i = 0; i < 10; i++)
  {
        //rc = pthread_create(&catthread[i], &attribute, start, &catdata[0]) ;
    int rc = pthread_create(&writeThreads[i], &attribute, writing, NULL);
    if(rc)
    {
      printf("ERROR");
      return EXIT_FAILURE;
    }
  }

  for(i = 0; i < 10; i++)
  {
    void * p;
    pthread_join(writeThreads[i], &p);
    int* ret = (int*)p;
    printf("Time Left for %i: %i \n", i, (*ret)); 
  }
}
